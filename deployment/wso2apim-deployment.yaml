apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: wso2apim
spec:
  replicas: 1
  minReadySeconds: 30
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        deployment: wso2apim
    spec:
      initContainers:
      - name: init-wso2-elasticsearch-service
        image: busybox
        command: ['sh', '-c', 'until nc -z wso2-elasticsearch-service 9200; do echo waiting for wso2-elasticsearch-service; sleep 2; done;']
      - name: init-wso2-kibana-service
        image: busybox
        command: ['sh', '-c', 'until nc -z wso2-kibana-service 5601; do echo waiting for wso2-kibana-service; sleep 2; done;']
      - name: install-jolokia-jar
        image: busybox
        command: ['sh', '-c', 'wget -O /dropins/jolokia-osgi-1.6.0.jar http://search.maven.org/remotecontent?filepath=org/jolokia/jolokia-osgi/1.6.0/jolokia-osgi-1.6.0.jar']
        volumeMounts:
        - name: dropins
          mountPath: "/dropins"
      containers:
      - name: wso2apim
        image: wso2/wso2am:2.6.0
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - nc -z localhost 9443
          initialDelaySeconds: 150
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
              - /bin/bash
              - -c
              - nc -z localhost 9443
          initialDelaySeconds: 150
          periodSeconds: 10
        imagePullPolicy: Always
        ports:
        -
          containerPort: 8280
          protocol: "TCP"
        -
          containerPort: 8243
          protocol: "TCP"
        -
          containerPort: 9763
          protocol: "TCP"
        -
          containerPort: 9443
          protocol: "TCP"
        -
          containerPort: 5672
          protocol: "TCP"
        -
          containerPort: 9711
          protocol: "TCP"
        -
          containerPort: 9611
          protocol: "TCP"
        -
          containerPort: 7711
          protocol: "TCP"
        -
          containerPort: 7611
          protocol: "TCP"
        volumeMounts:
        - name: shared-logs
          mountPath: /home/wso2carbon/wso2am-2.6.0/repository/logs/
        - name: dropins
          mountPath: "/home/wso2carbon/wso2-artifact-volume/repository/components/dropins/"
      - name: logstash
        image: maanadev/logstash:6.5.3-custom
        volumeMounts:
        - name: shared-logs
          mountPath: /usr/share/logstash/mylogs/
        - name: logstash-yml
          mountPath: /usr/share/logstash/config/logstash.yml
          subPath: logstash.yml
        - name: logstash-conf
          mountPath: /usr/share/logstash/pipeline/logstash.conf
          subPath: logstash.conf
        env:
        - name: NODE_ID
          value: "wso2-apim"
        - name: NODE_IP
          valueFrom:
            fieldRef:
             fieldPath: status.podIP
      - name: metricbeat
        image: docker.elastic.co/beats/metricbeat:7.0.0-alpha2
        volumeMounts:
        - name: metricbeat-yml
          mountPath: /usr/share/metricbeat/metricbeat.yml
          subPath: metricbeat.yml
        env:
        - name: NODE_ID
          value: "wso2-apim"
        - name: NODE_IP
          valueFrom:
            fieldRef:
             fieldPath: status.podIP
      volumes:
      - name: shared-logs
        emptyDir: {}
      - name: logstash-yml
        configMap:
          name: logstash-yml
      - name: logstash-conf
        configMap:
          name: logstash-conf
      - name: metricbeat-yml
        configMap:
          name: metricbeat-yml
      - name: dropins
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: wso2apim-service
spec:
  # label keys and values that must match in order to receive traffic for this service
  selector:
    deployment: wso2apim
  ports:
    # ports that this service should serve on
    -
      name: pass-through-http
      protocol: TCP
      port: 8280
    -
      name: pass-through-https
      protocol: TCP
      port: 8243
    -
      name: servlet-http
      protocol: TCP
      port: 9763
    -
      name: servlet-https
      protocol: TCP
      port: 9443
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: wso2apim-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
spec:
  tls:
  - hosts:
    - wso2apim
    - wso2apim-gateway
  rules:
  - host: wso2apim
    http:
      paths:
      - path: /
        backend:
          serviceName: wso2apim-service
          servicePort: 9443
  - host: wso2apim-gateway
    http:
      paths:
      - path: /
        backend:
          serviceName: wso2apim-service
          servicePort: 8243